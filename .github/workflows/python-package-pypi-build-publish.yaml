name: Build and Publish Python Package to PYPI

on:
  release:
    types: [published]

jobs:
  Lint_Unittest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pylint pyyaml

    - name: Analysing the code with pylint
      run: |
        pylint --exit-zero $(find src/ -name "*.py" | xargs)

    - name: Test Via Unittest Module
      run: |
        python3 -m unittest tests/basic-function-test.py

  Command_Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pyyaml poetry

    - name: Install
      run: poetry install

    - name: Check Version
      run: |
        poetry run sshc --version

    - name: Check Help
      run: |
        poetry run sshc --help

    - name: Initiate Database
      run: |
        poetry run sshc init
  

  Build_Publish:

    runs-on: ubuntu-latest
    needs: [Lint_Unittest, Command_Test]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry pyyaml

    - name: Copy pyproject
      run: |
        echo "Hi: ${{ github.ref }}"
        sed -i "s|.*version.*|version = \"`echo ${{ github.ref }} | sed 's|/|\t|g' | awk '{print $NF}'`\"|g" pyproject.toml 
        cp pyproject.toml src/pyproject.toml

    - name: Check Pyproject
      run: |
        cat pyproject.toml

    - name: Check Package
      run: |
        poetry check

    - name: Install
      run: poetry install

    - name: Build package
      run: poetry build

    - name: Publish
      run: |
        poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}